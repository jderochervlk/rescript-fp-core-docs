// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Url from "./Url.mjs";
import * as Next from "../bindings/Next.mjs";
import * as React from "react";
import * as ManualDocsLayout from "../layouts/ManualDocsLayout.mjs";
import * as LandingPageLayout from "../layouts/LandingPageLayout.mjs";

let hljs = require('highlight.js/lib/core');
  let js = require('highlight.js/lib/languages/javascript');
  let css = require('highlight.js/lib/languages/css');
  let ocaml = require('highlight.js/lib/languages/ocaml');
  let reason = require('plugins/reason-highlightjs');
  let rescript = require('plugins/rescript-highlightjs');
  let bash = require('highlight.js/lib/languages/bash');
  let json = require('highlight.js/lib/languages/json');
  let html = require('highlight.js/lib/languages/xml');
  let text = require('highlight.js/lib/languages/plaintext');
  let diff = require('highlight.js/lib/languages/diff');

  hljs.registerLanguage('reason', reason);
  hljs.registerLanguage('rescript', rescript);
  hljs.registerLanguage('javascript', js);
  hljs.registerLanguage('css', css);
  hljs.registerLanguage('ts', js);
  hljs.registerLanguage('ocaml', ocaml);
  hljs.registerLanguage('sh', bash);
  hljs.registerLanguage('json', json);
  hljs.registerLanguage('text', text);
  hljs.registerLanguage('html', html);
  hljs.registerLanguage('diff', diff);
;

function make(props) {
  var component = props.Component;
  var pageProps = props.pageProps;
  var router = Next.Router.useRouter(undefined);
  var content = React.createElement(component, pageProps);
  var url = Url.parse(router.route);
  if (url.base.length === 0 && url.pagepath.length === 0) {
    return React.createElement(LandingPageLayout.make, {
                children: content
              });
  }
  return React.createElement(ManualDocsLayout.Latest.make, {
              children: content
            });
}

export {
  make ,
}
/*  Not a pure module */
